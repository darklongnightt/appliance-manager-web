{"version":3,"sources":["assets/logo-grey.svg","utils/Endpoints.jsx","components/appliance/FormError.jsx","components/appliance/EditAppliance.jsx","components/appliance/RemoveAppliance.jsx","components/appliance/Appliance.jsx","components/appliance/CreateAppliance.jsx","components/appliance/Filter.jsx","components/appliance/ApplianceList.jsx","components/layout/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","hostAddr","FormError","props","errors","className","map","error","key","EditAppliance","update","appliance","useState","brand","setBrand","model","setModel","serialNum","serial","setSerial","status","setStatus","dateBought","date","setDate","setError","validateAndSubmit","newError","push","length","newAppliance","id","onSubmit","e","preventDefault","type","onChange","target","value","RemoveAppliance","remove","Fragment","href","onClick","Appliance","console","log","editId","removeId","handleClick","elem","document","getElementById","M","Modal","init","open","CreateAppliance","create","filterTypes","Filter","appliances","filter","search","setSearch","setType","updatedAppliances","item","toUpperCase","includes","filterType","data","forEach","elems","querySelectorAll","Autocomplete","disabled","selected","Object","entries","val","autoComplete","ApplianceList","setAppliances","filteredAppliances","setFilteredAppliances","useEffect","getAppliances","AutoInit","modals","closeModals","modal","close","showError","err","toast","html","message","displayLength","Infinity","Promise","resolve","reject","axios","get","then","resp","catch","response","reason","put","updateAppliance","updatedAppliance","delete","deleteAppliance","filteredList","post","createAppliance","Navbar","to","src","logo","alt","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bd278da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-grey.db5b4257.svg\";","import axios from 'axios'\n\nconst hostAddr = 'https://xavier-capgemini.herokuapp.com';\nconst defaultErrorStatus = 500;\nconst defaultErrorMessage = 'An error has occured!';\n\nexport const getAllAppliances = () => {\n    return new Promise((resolve, reject) => {\n        axios.get(`${hostAddr}/appliance/list`)\n            .then(resp => {\n                resolve(resp)\n            }).catch(err => {\n                reject({\n                    status: err.response ? err.response.status : defaultErrorStatus,\n                    message: err.response ? err.response.data.reason : defaultErrorMessage,\n                })\n            })\n    })\n}\n\nexport const createAppliance = (appliance) => {\n    return new Promise((resolve, reject) => {\n        axios.post(`${hostAddr}/appliance`, appliance)\n            .then(resp => {\n                resolve(resp)\n            }).catch(err => {\n                reject({\n                    status: err.response ? err.response.status : defaultErrorStatus,\n                    message: err.response ? err.response.data.reason : defaultErrorMessage,\n                })\n            })\n    })\n}\n\nexport const updateAppliance = (id, appliance) => {\n    return new Promise((resolve, reject) => {\n        axios.put(`${hostAddr}/appliance?id=${id}`, appliance)\n            .then(resp => {\n                resolve(resp)\n            }).catch(err => {\n                reject({\n                    status: err.response ? err.response.status : defaultErrorStatus,\n                    message: err.response ? err.response.data.reason : defaultErrorMessage,\n                })\n            })\n    })\n}\n\nexport const deleteAppliance = (id) => {\n    return new Promise((resolve, reject) => {\n        axios.delete(`${hostAddr}/appliance?id=${id}`)\n            .then(resp => {\n                resolve(resp)\n            }).catch(err => {\n                reject({\n                    status: err.response ? err.response.status : defaultErrorStatus,\n                    message: err.response ? err.response.data.reason : defaultErrorMessage,\n                })\n            })\n    })\n}","import React from 'react'\n\nconst FormError = (props) => {\n    const { errors } = props;\n    return (\n        <div className=\"card z-depth-0 form-error\">\n            <div className=\"card-content red-text\">\n                <ul>\n                    {errors && errors.map(error => {\n                        return (\n                            <li key={error}>{error}</li>\n                        )\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default FormError\n","import React, { useState } from 'react';\nimport FormError from './FormError';\n\nconst EditAppliance = (props) => {\n    const { update, appliance } = props\n    const [brand, setBrand] = useState(appliance.brand)\n    const [model, setModel] = useState(appliance.model)\n    const [serial, setSerial] = useState(appliance.serialNum)\n    const [status, setStatus] = useState(appliance.status)\n    const [date, setDate] = useState(appliance.dateBought)\n    const [error, setError] = useState([])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        validateAndSubmit()\n    }\n\n    const validateAndSubmit = () => {\n        const newError = []\n        if (!brand) {\n            newError.push('Please enter brand!')\n        }\n\n        if (!model) {\n            newError.push('Please enter model!')\n        }\n\n        if (!serial) {\n            newError.push('Please enter serial number!')\n        }\n\n        if (!status) {\n            newError.push('Please enter status!')\n        }\n\n        if (!date) {\n            newError.push('Please enter date of purchase!')\n        }\n\n        if (newError.length === 0) {\n            const newAppliance = {\n                brand: brand,\n                model: model,\n                serialNum: serial,\n                status: status,\n                dateBought: date,\n            }\n            update(appliance.id, newAppliance)\n        } else {\n            setError(newError)\n        }\n    }\n\n    return (\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n                <span className=\"card-title\">Edit Appliance</span>\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-field\">\n                        <label className=\"active\">Brand</label>\n                        <input type=\"text\" onChange={(e) => setBrand(e.target.value)} value={brand} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label className=\"active\">Model</label>\n                        <input type=\"text\" onChange={(e) => setModel(e.target.value)} value={model} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label className=\"active\">Serial Number</label>\n                        <input type=\"text\" onChange={(e) => setSerial(e.target.value)} value={serial} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label className=\"active\">Status</label>\n                        <input type=\"text\" onChange={(e) => setStatus(e.target.value)} value={status} />\n                    </div>\n\n                    <label>Purchase Date</label>\n                    <input type=\"date\" onChange={(e) => setDate(e.target.value)} value={date} />\n\n                    {error.length > 0 && (\n                        <FormError errors={error} />\n                    )}\n\n                    <button className=\"btn z-depth-0 blue darken-2 waves-effect waves-light\">\n                        <i className=\"material-icons\">send</i>\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditAppliance\n","import React from 'react'\n\nconst RemoveAppliance = (props) => {\n    const { appliance, remove } = props;\n    return (\n        <React.Fragment>\n            <h4><i className=\"modal-icon material-icons\">error</i> Remove</h4>\n            <h5>Are you sure you want to remove this appliance?</h5>\n            <div className=\"secondary-text\">\n                <div>Brand: {appliance.brand} </div>\n                <div>Model: {appliance.brand} </div>\n                <div>Serial Number: {appliance.serialNum} </div>\n                <div>Status: {appliance.status} </div>\n                <div>Purchase Date: {appliance.dateBought} </div>\n            </div>\n\n            <div className=\"modal-footer white\">\n                <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\" onClick={() => remove(appliance.id)}>Confirm</a>\n                <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Back</a>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default RemoveAppliance\n","import React from 'react';\nimport EditAppliance from './EditAppliance';\nimport RemoveAppliance from './RemoveAppliance';\nimport M from \"materialize-css\";\n\nconst Appliance = (props) => {\n    console.log(props)\n    const { appliance, update, remove } = props\n    const editId = `edit${appliance.id}`\n    const removeId = `remove${appliance.id}`\n\n    const handleClick = (id) => {\n        const elem = document.getElementById(id);\n        const instance = M.Modal.init(elem, {});\n        instance.open();\n    }\n\n    return (\n        <React.Fragment>\n            <li className=\"collection-item\">\n                <div>\n                    <div className=\"flex-container\">\n                        <div className=\"flex-item\">\n                            <span className=\"brand\">Brand: {appliance.brand} </span>\n                            <span className=\"model\">Model: {appliance.model} </span>\n                        </div>\n\n                        <a className=\"secondary-content modal-trigger flex-item-right\" href={'#' + removeId} onClick={() => handleClick(removeId)}>\n                            <i className=\"material-icons delete\">delete</i>\n                        </a>\n\n                        <a className=\"secondary-content modal-trigger flex-item-right\" href={'#' + editId} onClick={() => handleClick(editId)}>\n                            <i className=\"material-icons edit\">edit</i>\n                        </a>\n                    </div>\n\n                    <div>\n                        <span className=\"status-badge\">{appliance.status}</span>\n                        <span className=\"secondary-text\">Purchased: {appliance.dateBought} </span>\n                        <span className=\"serial\">{appliance.serialNum}</span>\n                    </div>\n\n                    <div id={removeId} className=\"modal\">\n                        <div className=\"modal-content white\">\n                            <RemoveAppliance appliance={appliance} remove={remove} />\n                        </div>\n                    </div>\n\n                    <div id={editId} className=\"modal\">\n                        <div className=\"modal-content white\">\n                            <EditAppliance appliance={appliance} update={update} />\n                        </div>\n                    </div>\n                </div>\n            </li>\n        </React.Fragment >\n    )\n}\n\nexport default Appliance\n","import React, { useState } from 'react';\nimport FormError from './FormError';\n\nconst CreateAppliance = (props) => {\n    const { create } = props\n    const [brand, setBrand] = useState('')\n    const [model, setModel] = useState('')\n    const [serial, setSerial] = useState('')\n    const [status, setStatus] = useState('')\n    const [date, setDate] = useState('')\n    const [error, setError] = useState([])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        validateAndSubmit()\n    }\n\n    const clearState = () => {\n        setBrand('')\n        setModel('')\n        setSerial('')\n        setStatus('')\n        setDate('')\n        setError('')\n    }\n\n    const validateAndSubmit = () => {\n        const newError = []\n        if (!brand) {\n            newError.push('Please enter brand!')\n        }\n\n        if (!model) {\n            newError.push('Please enter model!')\n        }\n\n        if (!serial) {\n            newError.push('Please enter serial number!')\n        }\n\n        if (!status) {\n            newError.push('Please enter status!')\n        }\n\n        if (!date) {\n            newError.push('Please enter date of purchase!')\n        }\n\n        if (newError.length === 0) {\n            const newAppliance = {\n                brand: brand,\n                model: model,\n                serialNum: serial,\n                status: status,\n                dateBought: date,\n            }\n            create(newAppliance)\n            clearState()\n        } else {\n            setError(newError)\n        }\n    }\n\n    return (\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n                <span className=\"card-title\">Create Appliance</span>\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-field\">\n                        <label>Brand</label>\n                        <input type=\"text\" value={brand} onChange={(e) => setBrand(e.target.value)} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label>Model</label>\n                        <input type=\"text\" value={model} onChange={(e) => setModel(e.target.value)} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label>Serial Number</label>\n                        <input type=\"text\" value={serial} onChange={(e) => setSerial(e.target.value)} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label>Status</label>\n                        <input type=\"text\" value={status} onChange={(e) => setStatus(e.target.value)} />\n                    </div>\n\n                    <label>Purchase Date</label>\n                    <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\n\n                    {error.length > 0 && (\n                        <FormError errors={error} />\n                    )}\n\n                    <button className=\"btn z-depth-0 blue darken-2 waves-effect waves-light\">\n                        <i className=\"material-icons\">send</i>\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateAppliance\n","import React, { useState } from 'react'\nimport M from \"materialize-css\";\n\nconst filterTypes = {\n    brand: 'Brand',\n    model: 'Model',\n    serialNum: 'Serial Number',\n    status: 'Status',\n    dateBought: 'Purchase Date',\n}\n\nconst Filter = (props) => {\n    const {appliances, filter} = props;\n    const [search, setSearch] = useState('')\n    const [type, setType] = useState('brand')\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        console.log('search: ', search)\n        console.log('type: ', type)\n\n        const updatedAppliances = appliances.filter(item => {\n            return item[type].toUpperCase().includes(search.toUpperCase())\n        })\n        console.log(updatedAppliances)\n        filter(updatedAppliances)\n    }\n\n    const handleChangeFilterType = e => {\n        const filterType = e.target.value\n        setType(filterType)\n\n        const data = {}\n        appliances.forEach(item => data[item[filterType]] = null)\n\n        const elems = document.querySelectorAll('.autocomplete');\n        M.Autocomplete.init(elems, {\n            data: data,\n        });\n    }\n\n    return (\n        <div className=\"card z-depth-0 filter-card\">\n            <div className=\"card-content\">\n\n                <form onSubmit={handleSubmit} className=\"filter-form\">\n                    <div className=\"input-field select\">\n                        <select onChange={handleChangeFilterType}>\n                            <option value=\"\" disabled selected>Choose Filter</option>\n                            {Object.entries(filterTypes).map(([key, val]) => {\n                                return <option value={key} key={key}>{val}</option>\n                            })}\n                        </select>\n                    </div>\n\n                    <div className=\"input-field search\">\n                        <label>Search</label>\n                        <input \n                            type=\"text\"\n                            onChange={(e) => setSearch(e.target.value)}\n                            id=\"autocomplete-input\"\n                            className=\"autocomplete\"\n                            autoComplete=\"off\"\n                        />\n                    </div>\n\n                    <button className=\"btn z-depth-0 blue darken-2 waves-effect waves-light\">\n                        <i className=\"material-icons\">send</i>\n                    </button>\n                </form>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Filter\n","import React, { useState, useEffect } from 'react';\nimport { getAllAppliances, createAppliance, updateAppliance, deleteAppliance } from '../../utils/Endpoints';\nimport Appliance from './Appliance';\nimport CreateAppliance from './CreateAppliance';\nimport M from \"materialize-css\";\nimport Filter from './Filter';\n\nconst ApplianceList = () => {\n    const [appliances, setAppliances] = useState([])\n    const [filteredAppliances, setFilteredAppliances] = useState([])\n\n    useEffect(() => {\n        getAppliances()\n        // eslint-disable-next-line\n    }, [])\n\n    M.AutoInit()\n    const elems = document.querySelectorAll('.modal');\n    const modals = M.Modal.init(elems, {});\n\n    const closeModals = () => {\n        modals.map(modal => {\n            return modal.close();\n        });\n    };\n\n    const showError = (err) => {\n        M.toast({\n            html: `${err.status}: ${err.message}`,\n            displayLength: Infinity\n        })\n    }\n\n    const filter = (filteredList) => {\n        setFilteredAppliances(filteredList)\n    }\n\n    const getAppliances = () => {\n        getAllAppliances().then(resp => {\n            setAppliances(resp.data)\n            setFilteredAppliances(resp.data)\n        }).catch(err => {\n            showError(err)\n        })\n    }\n\n    const create = (appliance) => {\n        createAppliance(appliance).then(resp => {\n            const newAppliance = { ...resp.data }\n            const updatedAppliances = [...appliances, newAppliance]\n            setAppliances(updatedAppliances)\n            setFilteredAppliances(updatedAppliances)\n            closeModals()\n            M.toast({html: 'Successfully created appliance entry!'})\n        }).catch(err => {\n            showError(err)\n        })\n    }\n\n    const update = (id, appliance) => {\n        updateAppliance(id, appliance).then(resp => {\n            const updatedAppliance = { ...resp.data }\n            const updatedAppliances = appliances.map(item => {\n                return (item.id === id ? updatedAppliance : item)\n            })\n            setAppliances(updatedAppliances)\n            setFilteredAppliances(updatedAppliances)\n            closeModals()\n            M.toast({html: 'Successfully updated appliance entry!'})\n        }).catch(err => {\n            showError(err)\n        })\n    }\n\n    const remove = (id) => {\n        deleteAppliance(id).then(() => {\n            const updatedAppliances = appliances.filter(item => {\n                return (item.id !== id)\n            })\n            setAppliances(updatedAppliances)\n            setFilteredAppliances(updatedAppliances)\n            M.toast({html: 'Successfully removed appliance entry!'})\n        }).catch(err => {\n            showError(err)\n        })\n    }\n\n    return (\n        <div className=\"container\">\n            <Filter appliances={appliances} filter={filter} />\n\n            <ul className=\"collection with-header\">\n                <li className=\"collection-header\">\n                    <div className=\"flex-container\">\n                        <div className=\"flex-item\">\n                            <h4>Appliances</h4>\n                        </div>\n\n                        <div className=\"flex-item-right\">\n                            <a className=\"btn-floating waves-effect waves-light z-depth-0 blue darken-2 modal-trigger\" href=\"#createModal\"><i className=\"material-icons\">add</i></a>\n                        </div>\n                    </div>\n\n                </li>\n                {filteredAppliances.length > 0 ? filteredAppliances.map(item => {\n                    return (\n                        <Appliance key={item.id} appliance={item} update={update} remove={remove} />\n                    )\n                }) : <li className=\"collection-item\">\n                        <div>\n                            You have no appliance!\n                        </div>\n                    </li>}\n            </ul>\n\n            <div id=\"createModal\" className=\"modal\">\n                <div className=\"modal-content white\">\n                    <CreateAppliance create={create} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ApplianceList\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../../assets/logo-grey.svg\"\n\nconst Navbar = () => {\n  return (\n    <nav className=\"nav-wrapper grey darken-3 nav-property\">\n      <div className=\"container\">\n        <Link\n          to=\"/\"\n          className=\"brand-logo center brand-text blue-text text-lighten-3 bold\"\n        >\n          <img src={logo} alt=\"logo\" className=\"circle white\"/>\n        </Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport ApplianceList from './components/appliance/ApplianceList';\nimport Navbar from './components/layout/Navbar';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={ApplianceList} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}